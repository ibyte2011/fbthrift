/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#pragma once

#include <thrift/lib/py3/enums.h>
#include "src/gen-cpp2/module_types.h"

template<>
const std::vector<std::pair<std::string_view, std::string_view>>& ::thrift::py3::PyEnumTraits<
    ::py3::simple::AnEnum>::namesmap() {
  static const folly::Indestructible<NamesMap> pairs {
    {
      {"NOTSET", "None"},
    }
  };
  return *pairs;
}


template<>
const std::vector<std::pair<std::string_view, std::string_view>>& ::thrift::py3::PyEnumTraits<
    ::py3::simple::Flags>::namesmap() {
  static const folly::Indestructible<NamesMap> pairs {
    {
    }
  };
  return *pairs;
}


template<>
const std::vector<std::pair<std::string_view, std::string_view>>& ::thrift::py3::PyEnumTraits<
    ::py3::simple::BinaryUnion::Type>::namesmap() {
  static const folly::Indestructible<NamesMap> pairs {
    {
    }
  };
  return *pairs;
}
