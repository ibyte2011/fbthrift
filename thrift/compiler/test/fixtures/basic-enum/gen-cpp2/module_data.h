/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include <thrift/lib/cpp2/gen/module_data_h.h>

#include "thrift/compiler/test/fixtures/basic-enum/gen-cpp2/module_types.h"

namespace apache { namespace thrift {

template <> struct TEnumDataStorage<::test::fixtures::enumstrict::EmptyEnum> {
  using type = ::test::fixtures::enumstrict::EmptyEnum;
  static constexpr const std::size_t size = 0;
  static constexpr const std::array<type, size> values = {{
  }};
  static constexpr const std::array<folly::StringPiece, size> names = {{
  }};
};
template <> struct TEnumDataStorage<::test::fixtures::enumstrict::MyEnum> {
  using type = ::test::fixtures::enumstrict::MyEnum;
  static constexpr const std::size_t size = 2;
  static constexpr const std::array<type, size> values = {{
    type::ONE,
    type::TWO,
  }};
  static constexpr const std::array<folly::StringPiece, size> names = {{
    "ONE",
    "TWO",
  }};
};
template <> struct TEnumDataStorage<::test::fixtures::enumstrict::MyBigEnum> {
  using type = ::test::fixtures::enumstrict::MyBigEnum;
  static constexpr const std::size_t size = 20;
  static constexpr const std::array<type, size> values = {{
    type::UNKNOWN,
    type::ONE,
    type::TWO,
    type::THREE,
    type::FOUR,
    type::FIVE,
    type::SIX,
    type::SEVEN,
    type::EIGHT,
    type::NINE,
    type::TEN,
    type::ELEVEN,
    type::TWELVE,
    type::THIRTEEN,
    type::FOURTEEN,
    type::FIFTEEN,
    type::SIXTEEN,
    type::SEVENTEEN,
    type::EIGHTEEN,
    type::NINETEEN,
  }};
  static constexpr const std::array<folly::StringPiece, size> names = {{
    "UNKNOWN",
    "ONE",
    "TWO",
    "THREE",
    "FOUR",
    "FIVE",
    "SIX",
    "SEVEN",
    "EIGHT",
    "NINE",
    "TEN",
    "ELEVEN",
    "TWELVE",
    "THIRTEEN",
    "FOURTEEN",
    "FIFTEEN",
    "SIXTEEN",
    "SEVENTEEN",
    "EIGHTEEN",
    "NINETEEN",
  }};
};

}} // apache::thrift
