#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

from libc.stdint cimport (
    int8_t as cint8_t,
    int16_t as cint16_t,
    int32_t as cint32_t,
    int64_t as cint64_t,
    uint32_t as cuint32_t,
)
from libcpp.string cimport string
from libcpp cimport bool as cbool, nullptr, nullptr_t
from cpython cimport bool as pbool
from libcpp.memory cimport shared_ptr, unique_ptr
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap, pair as cpair
from thrift.py3.exceptions cimport cTException
cimport folly.iobuf as __iobuf
cimport thrift.py3.exceptions
cimport thrift.py3.types
from thrift.py3.common cimport Protocol as __Protocol
from thrift.py3.types cimport bstring, move, field_ref as __FieldRef, optional_field_ref as __OptionalFieldRef
from folly.optional cimport cOptional
cdef extern from "src/gen-py3/module/types.h":
  pass


cdef extern from "src/gen-cpp2/module_types.h" namespace "::cpp2":
    cdef cppclass cMyEnum "::cpp2::MyEnum":
        pass





cdef class MyEnum(thrift.py3.types.CompiledEnum):
    pass

cdef extern from "src/gen-cpp2/module_types_custom_protocol.h" namespace "::cpp2":
    cdef cppclass cMyStructNestedAnnotation__isset "::cpp2::MyStructNestedAnnotation::__isset":
        bint name

    cdef cppclass cMyStructNestedAnnotation "::cpp2::MyStructNestedAnnotation":
        cMyStructNestedAnnotation() except +
        cMyStructNestedAnnotation(const cMyStructNestedAnnotation&) except +
        bint operator==(cMyStructNestedAnnotation&)
        bint operator!=(cMyStructNestedAnnotation&)
        bint operator<(cMyStructNestedAnnotation&)
        bint operator>(cMyStructNestedAnnotation&)
        bint operator<=(cMyStructNestedAnnotation&)
        bint operator>=(cMyStructNestedAnnotation&)
        __FieldRef[string] name_ref()
        string name
        cMyStructNestedAnnotation__isset __isset

    cdef cppclass cMyStructAnnotation__isset "::cpp2::MyStructAnnotation::__isset":
        bint count
        bint name
        bint extra
        bint nest

    cdef cppclass cMyStructAnnotation "::cpp2::MyStructAnnotation":
        cMyStructAnnotation() except +
        cMyStructAnnotation(const cMyStructAnnotation&) except +
        bint operator==(cMyStructAnnotation&)
        bint operator!=(cMyStructAnnotation&)
        bint operator<(cMyStructAnnotation&)
        bint operator>(cMyStructAnnotation&)
        bint operator<=(cMyStructAnnotation&)
        bint operator>=(cMyStructAnnotation&)
        __FieldRef[cint64_t] count_ref()
        cint64_t count
        __FieldRef[string] name_ref()
        string name
        __OptionalFieldRef[string] extra_ref()
        string extra
        __FieldRef[cMyStructNestedAnnotation] nest_ref()
        cMyStructNestedAnnotation nest
        cMyStructAnnotation__isset __isset

    cdef cppclass cMyStruct__isset "::cpp2::MyStruct::__isset":
        bint major "majorVer"
        bint package
        bint annotation_with_quote
        bint class_
        bint annotation_with_trailing_comma
        bint empty_annotations

    cdef cppclass cMyStruct "::cpp2::MyStruct":
        cMyStruct() except +
        cMyStruct(const cMyStruct&) except +
        bint operator==(cMyStruct&)
        bint operator!=(cMyStruct&)
        bint operator<(cMyStruct&)
        bint operator>(cMyStruct&)
        bint operator<=(cMyStruct&)
        bint operator>=(cMyStruct&)
        __FieldRef[cint64_t] major_ref "majorVer_ref"()
        cint64_t major "majorVer"
        __FieldRef[string] package_ref()
        string package
        __FieldRef[string] annotation_with_quote_ref()
        string annotation_with_quote
        __FieldRef[string] class__ref()
        string class_
        __FieldRef[string] annotation_with_trailing_comma_ref()
        string annotation_with_trailing_comma
        __FieldRef[string] empty_annotations_ref()
        string empty_annotations
        cMyStruct__isset __isset

    cdef cppclass cSecretStruct__isset "::cpp2::SecretStruct::__isset":
        bint id
        bint password

    cdef cppclass cSecretStruct "::cpp2::SecretStruct":
        cSecretStruct() except +
        cSecretStruct(const cSecretStruct&) except +
        bint operator==(cSecretStruct&)
        bint operator!=(cSecretStruct&)
        bint operator<(cSecretStruct&)
        bint operator>(cSecretStruct&)
        bint operator<=(cSecretStruct&)
        bint operator>=(cSecretStruct&)
        __FieldRef[cint64_t] id_ref()
        cint64_t id
        __FieldRef[string] password_ref()
        string password
        cSecretStruct__isset __isset

    cdef shared_ptr[cMyStructNestedAnnotation] reference_shared_ptr_nest "::thrift::py3::reference_shared_ptr<::cpp2::MyStructNestedAnnotation>"(shared_ptr[cMyStructAnnotation]&, cMyStructNestedAnnotation&)

cdef extern from "<utility>" namespace "std" nogil:
    cdef shared_ptr[cMyStructNestedAnnotation] __fbthrift_move "std::move"(unique_ptr[cMyStructNestedAnnotation])
    cdef shared_ptr[cMyStructNestedAnnotation] __fbthrift_move_shared "std::move"(shared_ptr[cMyStructNestedAnnotation])
    cdef unique_ptr[cMyStructNestedAnnotation] __fbthrift_move_unique "std::move"(unique_ptr[cMyStructNestedAnnotation])
    cdef shared_ptr[cMyStructAnnotation] __fbthrift_move "std::move"(unique_ptr[cMyStructAnnotation])
    cdef shared_ptr[cMyStructAnnotation] __fbthrift_move_shared "std::move"(shared_ptr[cMyStructAnnotation])
    cdef unique_ptr[cMyStructAnnotation] __fbthrift_move_unique "std::move"(unique_ptr[cMyStructAnnotation])
    cdef shared_ptr[cMyStruct] __fbthrift_move "std::move"(unique_ptr[cMyStruct])
    cdef shared_ptr[cMyStruct] __fbthrift_move_shared "std::move"(shared_ptr[cMyStruct])
    cdef unique_ptr[cMyStruct] __fbthrift_move_unique "std::move"(unique_ptr[cMyStruct])
    cdef shared_ptr[cSecretStruct] __fbthrift_move "std::move"(unique_ptr[cSecretStruct])
    cdef shared_ptr[cSecretStruct] __fbthrift_move_shared "std::move"(shared_ptr[cSecretStruct])
    cdef unique_ptr[cSecretStruct] __fbthrift_move_unique "std::move"(unique_ptr[cSecretStruct])

cdef extern from "<memory>" namespace "std" nogil:
    cdef shared_ptr[const cMyStructNestedAnnotation] const_pointer_cast "std::const_pointer_cast<const ::cpp2::MyStructNestedAnnotation>"(shared_ptr[cMyStructNestedAnnotation])
    cdef shared_ptr[const cMyStructAnnotation] const_pointer_cast "std::const_pointer_cast<const ::cpp2::MyStructAnnotation>"(shared_ptr[cMyStructAnnotation])
    cdef shared_ptr[const cMyStruct] const_pointer_cast "std::const_pointer_cast<const ::cpp2::MyStruct>"(shared_ptr[cMyStruct])
    cdef shared_ptr[const cSecretStruct] const_pointer_cast "std::const_pointer_cast<const ::cpp2::SecretStruct>"(shared_ptr[cSecretStruct])



cdef class MyStructNestedAnnotation(thrift.py3.types.Struct):
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[cMyStructNestedAnnotation] _cpp_obj

    @staticmethod
    cdef unique_ptr[cMyStructNestedAnnotation] _make_instance(
        cMyStructNestedAnnotation* base_instance,
        bint* __isNOTSET,
        str name
    ) except *

    @staticmethod
    cdef create(shared_ptr[cMyStructNestedAnnotation])



cdef class MyStructAnnotation(thrift.py3.types.Struct):
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[cMyStructAnnotation] _cpp_obj
    cdef MyStructNestedAnnotation __field_nest

    @staticmethod
    cdef unique_ptr[cMyStructAnnotation] _make_instance(
        cMyStructAnnotation* base_instance,
        bint* __isNOTSET,
        object count,
        str name,
        str extra,
        MyStructNestedAnnotation nest
    ) except *

    @staticmethod
    cdef create(shared_ptr[cMyStructAnnotation])



cdef class MyStruct(thrift.py3.types.Struct):
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[cMyStruct] _cpp_obj

    @staticmethod
    cdef unique_ptr[cMyStruct] _make_instance(
        cMyStruct* base_instance,
        bint* __isNOTSET,
        object major,
        str package,
        str annotation_with_quote,
        str class_,
        str annotation_with_trailing_comma,
        str empty_annotations
    ) except *

    @staticmethod
    cdef create(shared_ptr[cMyStruct])



cdef class SecretStruct(thrift.py3.types.Struct):
    cdef object __hash
    cdef object __weakref__
    cdef shared_ptr[cSecretStruct] _cpp_obj

    @staticmethod
    cdef unique_ptr[cSecretStruct] _make_instance(
        cSecretStruct* base_instance,
        bint* __isNOTSET,
        object id,
        str password
    ) except *

    @staticmethod
    cdef create(shared_ptr[cSecretStruct])





